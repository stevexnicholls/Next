// Code generated by go-swagger; DO NOT EDIT.

package kv

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/stevexnicholls/next/models"
)

// KeyDeleteNoContentCode is the HTTP code returned for type KeyDeleteNoContent
const KeyDeleteNoContentCode int = 204

/*KeyDeleteNoContent Deleted successfully

swagger:response keyDeleteNoContent
*/
type KeyDeleteNoContent struct {
}

// NewKeyDeleteNoContent creates KeyDeleteNoContent with default headers values
func NewKeyDeleteNoContent() *KeyDeleteNoContent {

	return &KeyDeleteNoContent{}
}

// WriteResponse to the client
func (o *KeyDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// KeyDeleteNotFoundCode is the HTTP code returned for type KeyDeleteNotFound
const KeyDeleteNotFoundCode int = 404

/*KeyDeleteNotFound The entry was not found

swagger:response keyDeleteNotFound
*/
type KeyDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewKeyDeleteNotFound creates KeyDeleteNotFound with default headers values
func NewKeyDeleteNotFound() *KeyDeleteNotFound {

	return &KeyDeleteNotFound{}
}

// WithPayload adds the payload to the key delete not found response
func (o *KeyDeleteNotFound) WithPayload(payload *models.Error) *KeyDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the key delete not found response
func (o *KeyDeleteNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *KeyDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*KeyDeleteDefault Error

swagger:response keyDeleteDefault
*/
type KeyDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewKeyDeleteDefault creates KeyDeleteDefault with default headers values
func NewKeyDeleteDefault(code int) *KeyDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &KeyDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the key delete default response
func (o *KeyDeleteDefault) WithStatusCode(code int) *KeyDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the key delete default response
func (o *KeyDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the key delete default response
func (o *KeyDeleteDefault) WithPayload(payload *models.Error) *KeyDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the key delete default response
func (o *KeyDeleteDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *KeyDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
