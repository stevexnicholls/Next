// Code generated by go-swagger; DO NOT EDIT.

package kv

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/stevexnicholls/next/models"
)

// KeyListOKCode is the HTTP code returned for type KeyListOK
const KeyListOKCode int = 200

/*KeyListOK successful operation

swagger:response keyListOK
*/
type KeyListOK struct {

	/*
	  In: Body
	*/
	Payload []*models.KeyValue `json:"body,omitempty"`
}

// NewKeyListOK creates KeyListOK with default headers values
func NewKeyListOK() *KeyListOK {

	return &KeyListOK{}
}

// WithPayload adds the payload to the key list o k response
func (o *KeyListOK) WithPayload(payload []*models.KeyValue) *KeyListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the key list o k response
func (o *KeyListOK) SetPayload(payload []*models.KeyValue) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *KeyListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.KeyValue, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*KeyListDefault Error

swagger:response keyListDefault
*/
type KeyListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewKeyListDefault creates KeyListDefault with default headers values
func NewKeyListDefault(code int) *KeyListDefault {
	if code <= 0 {
		code = 500
	}

	return &KeyListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the key list default response
func (o *KeyListDefault) WithStatusCode(code int) *KeyListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the key list default response
func (o *KeyListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the key list default response
func (o *KeyListDefault) WithPayload(payload *models.Error) *KeyListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the key list default response
func (o *KeyListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *KeyListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
