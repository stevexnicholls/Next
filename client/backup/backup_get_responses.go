// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/stevexnicholls/next/models"
)

// BackupGetReader is a Reader for the BackupGet structure.
type BackupGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewBackupGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewBackupGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewBackupGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBackupGetOK creates a BackupGetOK with default headers values
func NewBackupGetOK() *BackupGetOK {
	return &BackupGetOK{}
}

/*BackupGetOK handles this case with default header values.

Yay a backup
*/
type BackupGetOK struct {
}

func (o *BackupGetOK) Error() string {
	return fmt.Sprintf("[GET /v1alpha/backup][%d] backupGetOK ", 200)
}

func (o *BackupGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBackupGetNotFound creates a BackupGetNotFound with default headers values
func NewBackupGetNotFound() *BackupGetNotFound {
	return &BackupGetNotFound{}
}

/*BackupGetNotFound handles this case with default header values.

The entry was not found
*/
type BackupGetNotFound struct {
	Payload *models.Error
}

func (o *BackupGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v1alpha/backup][%d] backupGetNotFound  %+v", 404, o.Payload)
}

func (o *BackupGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupGetDefault creates a BackupGetDefault with default headers values
func NewBackupGetDefault(code int) *BackupGetDefault {
	return &BackupGetDefault{
		_statusCode: code,
	}
}

/*BackupGetDefault handles this case with default header values.

Error
*/
type BackupGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the backup get default response
func (o *BackupGetDefault) Code() int {
	return o._statusCode
}

func (o *BackupGetDefault) Error() string {
	return fmt.Sprintf("[GET /v1alpha/backup][%d] BackupGet default  %+v", o._statusCode, o.Payload)
}

func (o *BackupGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
